@typeparam TItem

@if (TotalPages > 1)
{
    <nav>
        <ul class="pagination">
            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                <button class="page-link" @onclick="() => OnPageSelected(CurrentPage - 1)">Précédent</button>
            </li>
            @for (int i = 1; i <= TotalPages; i++)
            {
                <li class="page-item @(i == CurrentPage ? "active" : "")">
                    <button class="page-link" @onclick="() => OnPageSelected(i)">@i</button>
                </li>
            }
            <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                <button class="page-link" @onclick="() => OnPageSelected(CurrentPage + 1)">Suivant</button>
            </li>
        </ul>
    </nav>
}

@code {
    [Parameter] public int TotalItems { get; set; }
    [Parameter] public int PageSize { get; set; }
    [Parameter] public int CurrentPage { get; set; }
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }

    private int TotalPages => (int)Math.Ceiling((double)TotalItems / PageSize);

    private async Task OnPageSelected(int page)
    {
        if (page >= 1 && page <= TotalPages)
        {
            await OnPageChanged.InvokeAsync(page);
        }
    }
}
